<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT>
    <SFA>
      <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
      <FILENAME>Col_meat.hpp</FILENAME>
      <LINE>374</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26439</DEFECTCODE>
    <DESCRIPTION>This kind of function should not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>arma::Col&lt;unsigned __int64&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Col@_K@arma@@QEAA@$$QEAV01@@Z</DECORATED>
    <FUNCLINE>374</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
      <FILENAME>Mat_meat.hpp</FILENAME>
      <LINE>751</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26439</DEFECTCODE>
    <DESCRIPTION>This kind of function should not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>arma::Mat&lt;double&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Mat@N@arma@@QEAA@$$QEAV01@@Z</DECORATED>
    <FUNCLINE>751</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
      <FILENAME>Mat_meat.hpp</FILENAME>
      <LINE>751</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'arma::Mat&lt;double&gt;::mem_local' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>arma::Mat&lt;double&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Mat@N@arma@@QEAA@$$QEAV01@@Z</DECORATED>
    <FUNCLINE>751</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>arma::Mat&lt;double&gt;::mem_local</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
      <FILENAME>Cube_meat.hpp</FILENAME>
      <LINE>267</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26439</DEFECTCODE>
    <DESCRIPTION>This kind of function should not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>arma::Cube&lt;double&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Cube@N@arma@@QEAA@$$QEAV01@@Z</DECORATED>
    <FUNCLINE>267</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
      <FILENAME>SpMat_meat.hpp</FILENAME>
      <LINE>238</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26439</DEFECTCODE>
    <DESCRIPTION>This kind of function should not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>arma::SpMat&lt;double&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$SpMat@N@arma@@QEAA@$$QEAV01@@Z</DECORATED>
    <FUNCLINE>238</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
      <FILENAME>field_meat.hpp</FILENAME>
      <LINE>41</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'arma::field&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;::mem_local' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>arma::field&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$field@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@arma@@QEAA@XZ</DECORATED>
    <FUNCLINE>41</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>arma::field&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;::mem_local</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
      <FILENAME>Mat_meat.hpp</FILENAME>
      <LINE>247</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'arma::Mat&lt;unsigned __int64&gt;::mem_local' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>arma::Mat&lt;unsigned __int64&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Mat@_K@arma@@IEAA@AEBUarma_vec_indicator@1@I@Z</DECORATED>
    <FUNCLINE>247</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>arma::Mat&lt;unsigned __int64&gt;::mem_local</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
      <FILENAME>SpMat_meat.hpp</FILENAME>
      <LINE>5716</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>6011</DEFECTCODE>
    <DESCRIPTION>Dereferencing NULL pointer 'values'. </DESCRIPTION>
    <FUNCTION>arma::SpMat&lt;double&gt;::mem_resize</FUNCTION>
    <DECORATED>?mem_resize@?$SpMat@N@arma@@QEAAX_K@Z</DECORATED>
    <FUNCLINE>5688</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>SpMat_meat.hpp</FILENAME>
        <LINE>5690</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>SpMat_meat.hpp</FILENAME>
        <LINE>5692</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>SpMat_meat.hpp</FILENAME>
        <LINE>5694</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>SpMat_meat.hpp</FILENAME>
        <LINE>5696</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>SpMat_meat.hpp</FILENAME>
        <LINE>5697</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>SpMat_meat.hpp</FILENAME>
        <LINE>5699</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>SpMat_meat.hpp</FILENAME>
        <LINE>5708</LINE>
        <COLUMN>5</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'values' may be NULL (Skip this branch)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>SpMat_meat.hpp</FILENAME>
        <LINE>5709</LINE>
        <COLUMN>5</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'row_indices' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>SpMat_meat.hpp</FILENAME>
        <LINE>5711</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>SpMat_meat.hpp</FILENAME>
        <LINE>5712</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>SpMat_meat.hpp</FILENAME>
        <LINE>5716</LINE>
        <COLUMN>41</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'values' is dereferenced, but may still be NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
      <FILENAME>SpMat_meat.hpp</FILENAME>
      <LINE>5717</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>6011</DEFECTCODE>
    <DESCRIPTION>Dereferencing NULL pointer 'row_indices'. </DESCRIPTION>
    <FUNCTION>arma::SpMat&lt;double&gt;::mem_resize</FUNCTION>
    <DECORATED>?mem_resize@?$SpMat@N@arma@@QEAAX_K@Z</DECORATED>
    <FUNCLINE>5688</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>SpMat_meat.hpp</FILENAME>
        <LINE>5690</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>SpMat_meat.hpp</FILENAME>
        <LINE>5692</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>SpMat_meat.hpp</FILENAME>
        <LINE>5694</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>SpMat_meat.hpp</FILENAME>
        <LINE>5696</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>SpMat_meat.hpp</FILENAME>
        <LINE>5697</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>SpMat_meat.hpp</FILENAME>
        <LINE>5699</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>SpMat_meat.hpp</FILENAME>
        <LINE>5708</LINE>
        <COLUMN>5</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>SpMat_meat.hpp</FILENAME>
        <LINE>5709</LINE>
        <COLUMN>5</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'row_indices' may be NULL (Skip this branch)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>SpMat_meat.hpp</FILENAME>
        <LINE>5711</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>SpMat_meat.hpp</FILENAME>
        <LINE>5712</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>SpMat_meat.hpp</FILENAME>
        <LINE>5716</LINE>
        <COLUMN>41</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>SpMat_meat.hpp</FILENAME>
        <LINE>5717</LINE>
        <COLUMN>41</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'row_indices' is dereferenced, but may still be NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
      <FILENAME>mtOp_meat.hpp</FILENAME>
      <LINE>36</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'arma::mtOp&lt;unsigned __int64,arma::Row&lt;unsigned __int64&gt;,arma::op_rel_eq&gt;::aux_uword_a' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>arma::mtOp&lt;unsigned __int64,arma::Row&lt;unsigned __int64&gt;,arma::op_rel_eq&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$mtOp@_KV?$Row@_K@arma@@Vop_rel_eq@2@@arma@@QEAA@AEBV?$Row@_K@1@_K@Z</DECORATED>
    <FUNCLINE>36</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>arma::mtOp&lt;unsigned __int64,arma::Row&lt;unsigned __int64&gt;,arma::op_rel_eq&gt;::aux_uword_a</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
      <FILENAME>arma_rng_cxx03.hpp</FILENAME>
      <LINE>159</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>arma::arma_rng_cxx03::randi_fill</FUNCTION>
    <DECORATED>??$randi_fill@_J@arma_rng_cxx03@arma@@SAXPEA_J_KHH@Z</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
      <FILENAME>arma_rng_cxx03.hpp</FILENAME>
      <LINE>159</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>arma::arma_rng_cxx03::randi_fill</FUNCTION>
    <DECORATED>??$randi_fill@_J@arma_rng_cxx03@arma@@SAXPEA_J_KHH@Z</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
      <FILENAME>Cube_meat.hpp</FILENAME>
      <LINE>580</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>28182</DEFECTCODE>
    <DESCRIPTION>Dereferencing NULL pointer. 'mat_ptrs' contains the same NULL value as 'new[]()`574' did. </DESCRIPTION>
    <FUNCTION>arma::Cube&lt;double&gt;::create_mat</FUNCTION>
    <DECORATED>?create_mat@?$Cube@N@arma@@IEAAXXZ</DECORATED>
    <FUNCLINE>556</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>3</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>Cube_meat.hpp</FILENAME>
        <LINE>558</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>Cube_meat.hpp</FILENAME>
        <LINE>560</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>Cube_meat.hpp</FILENAME>
        <LINE>562</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>Cube_meat.hpp</FILENAME>
        <LINE>564</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>Cube_meat.hpp</FILENAME>
        <LINE>572</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>Cube_meat.hpp</FILENAME>
        <LINE>574</LINE>
        <COLUMN>15</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'mat_ptrs' may be NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>Cube_meat.hpp</FILENAME>
        <LINE>576</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>Cube_meat.hpp</FILENAME>
        <LINE>580</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>Cube_meat.hpp</FILENAME>
        <LINE>580</LINE>
        <COLUMN>19</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume 's&lt;n_slices')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
        <FILENAME>Cube_meat.hpp</FILENAME>
        <LINE>580</LINE>
        <COLUMN>51</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'mat_ptrs' is dereferenced, but may still be NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\C++ libraries\opencv\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>mat.inl.hpp</FILENAME>
      <LINE>1239</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'cv::MatStep::buf' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>cv::MatStep::{ctor}</FUNCTION>
    <DECORATED>??0MatStep@cv@@QEAA@XZ</DECORATED>
    <FUNCLINE>1239</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>cv::MatStep::buf</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\C++ libraries\opencv\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>mat.inl.hpp</FILENAME>
      <LINE>1245</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'cv::MatStep::buf' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>cv::MatStep::{ctor}</FUNCTION>
    <DECORATED>??0MatStep@cv@@QEAA@_K@Z</DECORATED>
    <FUNCLINE>1245</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>cv::MatStep::buf</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\C++ libraries\opencv\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>mat.inl.hpp</FILENAME>
      <LINE>1874</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>cv::SparseMat::elemSize</FUNCTION>
    <DECORATED>?elemSize@SparseMat@cv@@QEBA_KXZ</DECORATED>
    <FUNCLINE>1872</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\C++ libraries\opencv\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>utility.hpp</FILENAME>
      <LINE>568</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>cv::getElemSize</FUNCTION>
    <DECORATED>?getElemSize@cv@@YA_KH@Z</DECORATED>
    <FUNCLINE>568</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\bahoz\source\repos\Polygonal random field sampler\Polygonal random field sampler\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>339</LINE>
      <COLUMN>85</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>potentialFunc</FUNCTION>
    <DECORATED>?potentialFunc@@YANAEAVDynamicGraph@@@Z</DECORATED>
    <FUNCLINE>319</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\bahoz\source\repos\Polygonal random field sampler\Polygonal random field sampler\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>339</LINE>
      <COLUMN>151</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>potentialFunc</FUNCTION>
    <DECORATED>?potentialFunc@@YANAEAVDynamicGraph@@@Z</DECORATED>
    <FUNCLINE>319</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\bahoz\source\repos\Polygonal random field sampler\Polygonal random field sampler\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>340</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>potentialFunc</FUNCTION>
    <DECORATED>?potentialFunc@@YANAEAVDynamicGraph@@@Z</DECORATED>
    <FUNCLINE>319</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\bahoz\source\repos\Polygonal random field sampler\Polygonal random field sampler\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>340</LINE>
      <COLUMN>89</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>potentialFunc</FUNCTION>
    <DECORATED>?potentialFunc@@YANAEAVDynamicGraph@@@Z</DECORATED>
    <FUNCLINE>319</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\bahoz\source\repos\Polygonal random field sampler\Polygonal random field sampler\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>340</LINE>
      <COLUMN>130</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>potentialFunc</FUNCTION>
    <DECORATED>?potentialFunc@@YANAEAVDynamicGraph@@@Z</DECORATED>
    <FUNCLINE>319</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\bahoz\source\repos\Polygonal random field sampler\Polygonal random field sampler\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>340</LINE>
      <COLUMN>159</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>potentialFunc</FUNCTION>
    <DECORATED>?potentialFunc@@YANAEAVDynamicGraph@@@Z</DECORATED>
    <FUNCLINE>319</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\bahoz\source\repos\Polygonal random field sampler\Polygonal random field sampler\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>341</LINE>
      <COLUMN>85</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>potentialFunc</FUNCTION>
    <DECORATED>?potentialFunc@@YANAEAVDynamicGraph@@@Z</DECORATED>
    <FUNCLINE>319</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\bahoz\source\repos\Polygonal random field sampler\Polygonal random field sampler\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>341</LINE>
      <COLUMN>151</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>potentialFunc</FUNCTION>
    <DECORATED>?potentialFunc@@YANAEAVDynamicGraph@@@Z</DECORATED>
    <FUNCLINE>319</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\bahoz\source\repos\Polygonal random field sampler\Polygonal random field sampler\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>377</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6262</DEFECTCODE>
    <DESCRIPTION>Function uses '30176' bytes of stack.  Consider moving some data to heap.</DESCRIPTION>
    <FUNCTION>main123</FUNCTION>
    <DECORATED>?main123@@YAHXZ</DECORATED>
    <FUNCLINE>377</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\bahoz\source\repos\Polygonal random field sampler\Polygonal random field sampler\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>392</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6262</DEFECTCODE>
    <DESCRIPTION>Function uses '35392' bytes of stack.  Consider moving some data to heap.</DESCRIPTION>
    <FUNCTION>main</FUNCTION>
    <DECORATED>main</DECORATED>
    <FUNCLINE>392</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\C++ libraries\opencv\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>matx.hpp</FILENAME>
      <LINE>578</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>cv::Matx&lt;float,3,1&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Matx@M$02$00@cv@@QEAA@MMM@Z</DECORATED>
    <FUNCLINE>574</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\C++ libraries\opencv\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>matx.hpp</FILENAME>
      <LINE>578</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>6201</DEFECTCODE>
    <DESCRIPTION>Index '3' is out of valid index range '0' to '2' for possibly stack allocated buffer 'this-&gt;val'.</DESCRIPTION>
    <FUNCTION>cv::Matx&lt;float,3,1&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Matx@M$02$00@cv@@QEAA@MMM@Z</DECORATED>
    <FUNCLINE>574</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\C++ libraries\opencv\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>matx.hpp</FILENAME>
      <LINE>570</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>cv::Matx&lt;float,2,1&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Matx@M$01$00@cv@@QEAA@MM@Z</DECORATED>
    <FUNCLINE>566</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\C++ libraries\opencv\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>matx.hpp</FILENAME>
      <LINE>570</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>6201</DEFECTCODE>
    <DESCRIPTION>Index '2' is out of valid index range '0' to '1' for possibly stack allocated buffer 'this-&gt;val'.</DESCRIPTION>
    <FUNCTION>cv::Matx&lt;float,2,1&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Matx@M$01$00@cv@@QEAA@MM@Z</DECORATED>
    <FUNCLINE>566</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\C++ libraries\opencv\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>matx.hpp</FILENAME>
      <LINE>586</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>cv::Matx&lt;float,4,1&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Matx@M$03$00@cv@@QEAA@MMMM@Z</DECORATED>
    <FUNCLINE>582</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\C++ libraries\opencv\opencv\build\include\opencv2\core\</FILEPATH>
      <FILENAME>matx.hpp</FILENAME>
      <LINE>586</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>6201</DEFECTCODE>
    <DESCRIPTION>Index '4' is out of valid index range '0' to '3' for possibly stack allocated buffer 'this-&gt;val'.</DESCRIPTION>
    <FUNCTION>cv::Matx&lt;float,4,1&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Matx@M$03$00@cv@@QEAA@MMMM@Z</DECORATED>
    <FUNCLINE>582</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\bahoz\source\repos\Polygonal random field sampler\Polygonal random field sampler\</FILEPATH>
      <FILENAME>Markov Random Field.cpp</FILENAME>
      <LINE>22</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>MarkovRandomField::localCharacteristic</FUNCTION>
    <DECORATED>?localCharacteristic@MarkovRandomField@@QEAANHHN@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\bahoz\source\repos\Polygonal random field sampler\Polygonal random field sampler\</FILEPATH>
      <FILENAME>Markov Random Field.cpp</FILENAME>
      <LINE>26</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>MarkovRandomField::localCharacteristic</FUNCTION>
    <DECORATED>?localCharacteristic@MarkovRandomField@@QEAANHHN@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\bahoz\source\repos\Polygonal random field sampler\Polygonal random field sampler\</FILEPATH>
      <FILENAME>Markov Random Field.cpp</FILENAME>
      <LINE>30</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>MarkovRandomField::localCharacteristic</FUNCTION>
    <DECORATED>?localCharacteristic@MarkovRandomField@@QEAANHHN@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\bahoz\source\repos\Polygonal random field sampler\Polygonal random field sampler\</FILEPATH>
      <FILENAME>Markov Random Field.cpp</FILENAME>
      <LINE>34</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>MarkovRandomField::localCharacteristic</FUNCTION>
    <DECORATED>?localCharacteristic@MarkovRandomField@@QEAANHHN@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\bahoz\source\repos\Polygonal random field sampler\Polygonal random field sampler\</FILEPATH>
      <FILENAME>Markov Random Field.cpp</FILENAME>
      <LINE>142</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>MarkovRandomField::PRFPotentialFunction</FUNCTION>
    <DECORATED>?PRFPotentialFunction@MarkovRandomField@@QEAANXZ</DECORATED>
    <FUNCLINE>136</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\bahoz\source\repos\Polygonal random field sampler\Polygonal random field sampler\</FILEPATH>
      <FILENAME>Markov Random Field.cpp</FILENAME>
      <LINE>142</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>MarkovRandomField::PRFPotentialFunction</FUNCTION>
    <DECORATED>?PRFPotentialFunction@MarkovRandomField@@QEAANXZ</DECORATED>
    <FUNCLINE>136</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\bahoz\source\repos\Polygonal random field sampler\Polygonal random field sampler\</FILEPATH>
      <FILENAME>Markov Random Field.cpp</FILENAME>
      <LINE>146</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>MarkovRandomField::PRFPotentialFunction</FUNCTION>
    <DECORATED>?PRFPotentialFunction@MarkovRandomField@@QEAANXZ</DECORATED>
    <FUNCLINE>136</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\bahoz\source\repos\Polygonal random field sampler\Polygonal random field sampler\</FILEPATH>
      <FILENAME>Markov Random Field.cpp</FILENAME>
      <LINE>146</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>MarkovRandomField::PRFPotentialFunction</FUNCTION>
    <DECORATED>?PRFPotentialFunction@MarkovRandomField@@QEAANXZ</DECORATED>
    <FUNCLINE>136</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
      <FILENAME>Mat_meat.hpp</FILENAME>
      <LINE>5565</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'arma::Mat&lt;double&gt;::mem_local' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>arma::Mat&lt;double&gt;::{ctor}</FUNCTION>
    <DECORATED>??$?0V?$Mat@N@arma@@V01@Vglue_mvnrnd@1@@?$Mat@N@arma@@QEAA@AEBV?$Glue@V?$Mat@N@arma@@V12@Vglue_mvnrnd@2@@1@@Z</DECORATED>
    <FUNCLINE>5565</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>arma::Mat&lt;double&gt;::mem_local</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
      <FILENAME>Mat_meat.hpp</FILENAME>
      <LINE>45</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'arma::Mat&lt;double&gt;::mem_local' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>arma::Mat&lt;double&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Mat@N@arma@@QEAA@XZ</DECORATED>
    <FUNCLINE>45</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>arma::Mat&lt;double&gt;::mem_local</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
      <FILENAME>eOp_meat.hpp</FILENAME>
      <LINE>26</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'arma::eOp&lt;arma::Col&lt;double&gt;,arma::eop_sqrt&gt;::aux_uword_a' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>arma::eOp&lt;arma::Col&lt;double&gt;,arma::eop_sqrt&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$eOp@V?$Col@N@arma@@Veop_sqrt@2@@arma@@QEAA@AEBV?$Col@N@1@@Z</DECORATED>
    <FUNCLINE>26</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>arma::eOp&lt;arma::Col&lt;double&gt;,arma::eop_sqrt&gt;::aux_uword_a</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
      <FILENAME>Op_meat.hpp</FILENAME>
      <LINE>26</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'arma::Op&lt;arma::eOp&lt;arma::Col&lt;double&gt;,arma::eop_sqrt&gt;,arma::op_diagmat&gt;::aux_uword_a' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>arma::Op&lt;arma::eOp&lt;arma::Col&lt;double&gt;,arma::eop_sqrt&gt;,arma::op_diagmat&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Op@V?$eOp@V?$Col@N@arma@@Veop_sqrt@2@@arma@@Vop_diagmat@2@@arma@@QEAA@AEBV?$eOp@V?$Col@N@arma@@Veop_sqrt@2@@1@@Z</DECORATED>
    <FUNCLINE>26</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>arma::Op&lt;arma::eOp&lt;arma::Col&lt;double&gt;,arma::eop_sqrt&gt;,arma::op_diagmat&gt;::aux_uword_a</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
      <FILENAME>Glue_meat.hpp</FILENAME>
      <LINE>26</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'arma::Glue&lt;arma::Mat&lt;double&gt;,arma::Op&lt;arma::eOp&lt;arma::Col&lt;double&gt;,arma::eop_sqrt&gt;,arma::op_diagmat&gt;,arma::glue_times_diag&gt;::aux_uword' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>arma::Glue&lt;arma::Mat&lt;double&gt;,arma::Op&lt;arma::eOp&lt;arma::Col&lt;double&gt;,arma::eop_sqrt&gt;,arma::op_diagmat&gt;,arma::glue_times_diag&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Glue@V?$Mat@N@arma@@V?$Op@V?$eOp@V?$Col@N@arma@@Veop_sqrt@2@@arma@@Vop_diagmat@2@@2@Vglue_times_diag@2@@arma@@QEAA@AEBV?$Mat@N@1@AEBV?$Op@V?$eOp@V?$Col@N@arma@@Veop_sqrt@2@@arma@@Vop_diagmat@2@@1@@Z</DECORATED>
    <FUNCLINE>26</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>arma::Glue&lt;arma::Mat&lt;double&gt;,arma::Op&lt;arma::eOp&lt;arma::Col&lt;double&gt;,arma::eop_sqrt&gt;,arma::op_diagmat&gt;,arma::glue_times_diag&gt;::aux_uword</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
      <FILENAME>Mat_meat.hpp</FILENAME>
      <LINE>4932</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'arma::Mat&lt;double&gt;::mem_local' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>arma::Mat&lt;double&gt;::{ctor}</FUNCTION>
    <DECORATED>??$?0V?$eOp@V?$Col@N@arma@@Veop_sqrt@2@@arma@@Vop_diagmat@1@@?$Mat@N@arma@@QEAA@AEBV?$Op@V?$eOp@V?$Col@N@arma@@Veop_sqrt@2@@arma@@Vop_diagmat@2@@1@@Z</DECORATED>
    <FUNCLINE>4932</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>arma::Mat&lt;double&gt;::mem_local</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\C++ libraries\armadillo-11.4.3\include\armadillo_bits\</FILEPATH>
      <FILENAME>Op_meat.hpp</FILENAME>
      <LINE>60</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'arma::Op&lt;arma::Mat&lt;double&gt;,arma::op_trimat&gt;::aux_uword_c' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>arma::Op&lt;arma::Mat&lt;double&gt;,arma::op_trimat&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Op@V?$Mat@N@arma@@Vop_trimat@2@@arma@@QEAA@AEBV?$Mat@N@1@_K1@Z</DECORATED>
    <FUNCLINE>60</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>arma::Op&lt;arma::Mat&lt;double&gt;,arma::op_trimat&gt;::aux_uword_c</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\bahoz\source\repos\Polygonal random field sampler\Polygonal random field sampler\</FILEPATH>
      <FILENAME>Dynamic Graph.h</FILENAME>
      <LINE>17</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'DynamicGraph::maxTime' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>DynamicGraph::{ctor}</FUNCTION>
    <DECORATED>??0DynamicGraph@@QEAA@XZ</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>DynamicGraph::maxTime</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\bahoz\source\repos\Polygonal random field sampler\Polygonal random field sampler\</FILEPATH>
      <FILENAME>Markov Random Field.h</FILENAME>
      <LINE>35</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'MarkovRandomField::height' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>MarkovRandomField::{ctor}</FUNCTION>
    <DECORATED>??0MarkovRandomField@@QEAA@XZ</DECORATED>
    <FUNCLINE>35</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>MarkovRandomField::height</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\bahoz\source\repos\Polygonal random field sampler\Polygonal random field sampler\</FILEPATH>
      <FILENAME>SampleRectangleMRFPRFcpp.cpp</FILENAME>
      <LINE>154</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SampleRectangleMRFPRF::removeMRFEdges</FUNCTION>
    <DECORATED>?removeMRFEdges@SampleRectangleMRFPRF@@QEAAXAEAVDynamicGraph@@@Z</DECORATED>
    <FUNCLINE>149</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\bahoz\source\repos\Polygonal random field sampler\Polygonal random field sampler\</FILEPATH>
      <FILENAME>SampleRectangleMRFPRFcpp.cpp</FILENAME>
      <LINE>167</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SampleRectangleMRFPRF::removeMRFEdges</FUNCTION>
    <DECORATED>?removeMRFEdges@SampleRectangleMRFPRF@@QEAAXAEAVDynamicGraph@@@Z</DECORATED>
    <FUNCLINE>149</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\bahoz\source\repos\Polygonal random field sampler\Polygonal random field sampler\</FILEPATH>
      <FILENAME>SampleRectangleMRFPRFcpp.cpp</FILENAME>
      <LINE>175</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SampleRectangleMRFPRF::removeMRFEdges</FUNCTION>
    <DECORATED>?removeMRFEdges@SampleRectangleMRFPRF@@QEAAXAEAVDynamicGraph@@@Z</DECORATED>
    <FUNCLINE>149</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\bahoz\source\repos\Polygonal random field sampler\Polygonal random field sampler\</FILEPATH>
      <FILENAME>SampleRectangleMRFPRFcpp.cpp</FILENAME>
      <LINE>231</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SampleRectangleMRFPRF::drawGraph</FUNCTION>
    <DECORATED>?drawGraph@SampleRectangleMRFPRF@@QEAAXXZ</DECORATED>
    <FUNCLINE>208</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\bahoz\source\repos\Polygonal random field sampler\Polygonal random field sampler\</FILEPATH>
      <FILENAME>SampleRectangleMRFPRFcpp.cpp</FILENAME>
      <LINE>235</LINE>
      <COLUMN>80</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SampleRectangleMRFPRF::drawGraph</FUNCTION>
    <DECORATED>?drawGraph@SampleRectangleMRFPRF@@QEAAXXZ</DECORATED>
    <FUNCLINE>208</FUNCLINE>
    <PATH></PATH>
  </DEFECT></DEFECTS>